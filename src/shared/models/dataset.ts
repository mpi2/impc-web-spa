type SummaryStatistics = {
  bothMutantCount: number;
  bothMutantMean: number;
  bothMutantSd: number;
  femaleControlCount: number;
  femaleControlMean: number;
  femaleControlSd: number;
  femaleMutantCount: number;
  femaleMutantMean: number;
  femaleMutantSd: number;
  maleControlCount: number;
  maleControlMean: number;
  maleControlSd: number;
  maleMutantCount: number;
  maleMutantMean: number;
  maleMutantSd: number;
};
type StatisticalMethod = {
  name: string;
  attributes: {
    femaleEffectSize: number | null;
    femaleKoEffectPValue: number;
    femaleKoEffectStderrEstimate: number;
    femaleKoParameterEstimate: number;
    femalePercentageChange: number | null;
    maleKoEffectPValue: number;
    maleKoEffectStderrEstimate: number;
    maleKoParameterEstimate: number;
    malePercentageChange: number | null;
    genotypeEffectPValue: number;
    genotypeEffectStderrEstimate: number;
    group1Genotype: string;
    group1ResidualsNormalityTest: number;
    group2Genotype: string;
    group2ResidualsNormalityTest: number;
    interactionEffectPValue: number | null;
    interactionSignificant: boolean | null;
    interceptEstimate: number;
    interceptEstimateStderrEstimate: number;
    maleEffectSize: number | null;
    sexEffectPValue: number | null;
    sexEffectParameterEstimate: number | null;
    sexEffectStderrEstimate: number | null;
    batchSignificant: boolean;
    varianceSignificant: boolean;
    femaleEffectSizeLowNormalVsHigh: number | null;
    femaleEffectSizeLowVsNormalHigh: number | null;
    femalePValueLowNormalVsHigh: number | null;
    femalePValueLowVsNormalHigh: number | null;
    maleEffectSizeLowNormalVsHigh: number | null;
    maleEffectSizeLowVsNormalHigh: number | null;
    malePValueLowNormalVsHigh: number | null;
    malePValueLowVsNormalHigh: number | null;
    genotypeEffectSizeLowNormalVsHigh: number | null;
    genotypeEffectSizeLowVsNormalHigh: number | null;
    genotypePValueLowNormalVsHigh: number | null;
    genotypePValueLowVsNormalHigh: number | null;
    weightEffectPValue: number | null;
    weightEffectParameterEstimate: number | null;
    weightEffectStderrEstimate: number | null;
  };
};
type SoftWindowing = {
  bandwidth: number | null;
  doeNote: string | null;
  minObsRequired: number | null;
  numberOfDoe: number | null;
  peaks: Array<number> | null;
  shape: number | null;
  threshold: number | null;
  totalObsOrWeight: number | null;
};
export type Dataset = {
  id: string;
  alleleAccessionId: string;
  alleleName: string;
  alleleSymbol: string;
  classificationTag: string | null;
  colonyId: string;
  dataType: string;
  geneSymbol: string;
  geneticBackground: string;
  intermediatePhenotypes: Array<{ name: string; id: string }>;
  potentialPhenotypes: Array<{ name: string; id: string }>;
  lifeStageAcc: string;
  lifeStageName: string;
  metadataGroup: string;
  metadataValues: Array<string>;
  mgiGeneAccessionId: string;
  parameterName: string;
  parameterStableId: string;
  parameterStableKey: number;
  phenotypeSex: Array<string>;
  phenotypingCentre: string;
  pipelineName: string;
  pipelineStableId: string;
  pipelineStableKey: number;
  procedureGroup: string;
  procedureName: string;
  procedureStableId: string;
  procedureStableKey: number;
  productionCentre: string;
  projectName: string;
  reportedEffectSize: number;
  reportedPValue: number;
  resourceFullName: string;
  resourceName: string;
  sex: string;
  zygosity: "homozygote" | "heterozygote" | "hemizygote";
  significant: boolean;
  significantPhenotype: { name: string; id: string };
  unit: { x: string | null; y: string | null };
  datasetId: string;
  status: string;
  strainAccessionId: string;
  strainName: string;
  summaryStatistics: SummaryStatistics;
  statisticalMethod: StatisticalMethod;
  softWindowing: SoftWindowing;
  topLevelPhenotypes: Array<{ name: string; id: string }>;
  key?: string;
};

export type DatasetExtra = Dataset & {
  datasetNum: number;
  topLevelPhenotype: string;
  phenotype: string;
  id: string;
  viability: string;
};
